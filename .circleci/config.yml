version: 2
jobs:
  build:
    # Actually, this `docker` keyword means your CircleCI build will be launched in a docker
    # container instead of a Linux VM.
    machine: true # Use a Linux VM instead of docker environment.
    #docker:      
    #  - image: circleci/node:7.10 # Specify the version you desire here.  
    working_directory: ~/repo # Default working directory, where your project will be cloned  .
    steps:
      - checkout # Add a checkout of the repository.
      # ... steps for building/testing app ...

      # When setup_remote_docker executes, a remote environment will be created, and your current
      # primary container will be configured to use it. Then, any docker-related commands you use
      #will be safely executed in this new environment.
      #- setup_remote_docker:
      #    version: 17.05.0-ce

      # Docker-compose is by default installed on the Linux VM provided by CircleCI. We can directly
      # build and up our containers.
      - run: docker-compose up -d 

      # Now you can install the dependencies of your project. Here we have node (yarn) and PHP (composer) dependencies.
      - run: docker-compose exec php composer install -n --prefer-dist
      - run: docker-compose run --rm front yarn install
      - run: docker-compose run --rm front yarn build
      # Now we can run our tests!
      - run: docker-compose exec php vendor/bin/phpspec run -vvv
      - run: docker-compose exec php ./vendor/bin/behat -v          
